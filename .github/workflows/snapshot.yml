name: Snapshot

on:
    push:
        branches:
            - master
        paths:
            - 'src/**.jsx?'
            - 'src/**.mjs'
            - 'src/**.cjs'

    repository_dispatch:
        types: [snapshot]

env:
    CI: true

jobs:
    Build:
        runs-on: ubuntu-latest
        steps:
            - name: Cancel Previous Runs
              uses: styfle/cancel-workflow-action@0.5.0
              with:
                  access_token: ${{ github.token }}

            - name: install SSH key
              uses: webfactory/ssh-agent@v0.4.1
              with:
                  ssh-private-key: ${{ secrets.ACTIONS_REPO_ACCESS }}

            - name: clone
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            - name: setup nodejs
              uses: actions/setup-node@v2
              with:
                  node-version: '15'

            - uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: configure npm
              env:
                  NPM_REGISTRY: ${{ secrets.NPM_REGISTRY }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: |
                  npm config set loglevel error
                  npm config set progress false
                  npm config set '@nti:registry' "$NPM_REGISTRY"
                  npm config set "${NPM_REGISTRY/https:/}/:_authToken" "$NPM_TOKEN"
                  npm install --global npm

            - name: Generate snapshot
              id: build
              env:
                  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
              run: npx -y @nti/ci-scripts snapshot

            - name: notify of failure
              if: failure()
              env:
                  LINK: ${{ format('<https://github.com/{0}/actions|{1} failed>', github.repository, steps.build.outputs.SNAPSHOT_ID) }}
              run: |
                  MESSAGE="{\"text\": \"#### :stop_sign: $LINK\" }"
                  curl -i -X POST -H 'Content-Type: application/json' -d "$MESSAGE" ${{secrets.MM_HOOK}}

            - name: notify of new snap
              if: success()
              env:
                  LINK: ${{ format('<https://github.com/{0}/actions|New snapshot {1}>', github.repository, steps.build.outputs.SNAPSHOT_ID) }}
              run: |
                  MESSAGE="{\"text\": \"#### :white_check_mark: $LINK\", \"channel\":\"Jenkins\" }"
                  curl -i -X POST -H 'Content-Type: application/json' -d "$MESSAGE" ${{secrets.MM_HOOK}}
                  [ "" != "${{secrets.WEB_SNAPSHOT_URL}}" ] && curl -X POST ${{secrets.WEB_SNAPSHOT_URL}} || true
